// <auto-generated />
using Mail.Sqllite;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Mail.Migrations
{
    [DbContext(typeof(SqlContext))]
    partial class SqlContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.14");

            modelBuilder.Entity("Mail.Sqllite.Folder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("Attribute")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("HasUnread")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ParentId")
                        .HasColumnType("TEXT");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Folders");
                });

            modelBuilder.Entity("Mail.Sqllite.Mail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("From")
                        .HasColumnType("TEXT");

                    b.Property<string>("Html")
                        .HasColumnType("TEXT");

                    b.Property<string>("IdMail")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ParentFolderId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Theme")
                        .HasColumnType("TEXT");

                    b.Property<string>("To")
                        .HasColumnType("TEXT");

                    b.Property<bool>("Unread")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Mails");
                });

            modelBuilder.Entity("Mail.Sqllite.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("HasUnread")
                        .HasColumnType("INTEGER");

                    b.Property<string>("HostImap")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("HostSmtp")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("IsSslImap")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IsSslSmtp")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsUseAuthImap")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsUseAuthSmtp")
                        .HasColumnType("INTEGER");

                    b.Property<string>("MailAdr")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PasswordImap")
                        .HasColumnType("TEXT");

                    b.Property<string>("PasswordSmtp")
                        .HasColumnType("TEXT");

                    b.Property<int>("PortImap")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PortSmtp")
                        .HasColumnType("INTEGER");

                    b.Property<string>("UsernameImap")
                        .HasColumnType("TEXT");

                    b.Property<string>("UsernameSmtp")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
